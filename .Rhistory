filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>%
mutate(Follicle = str_trim(Follicle),
Sequence = coalesce(Sequence.HT1, Sequence.HT2, Sequence.HT3, Sequence.HT4, Sequence.HT5))
# Select relevant columns and rows
HH117_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>%
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>%
mutate(Follicle = str_trim(Follicle),
Sequence = coalesce(starts_with("Sequence")))
# Select relevant columns and rows
HH117_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>%
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>%
mutate(Follicle = str_trim(Follicle),
coalesce(c_across(starts_with("Sequence"))))
HH117_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence"))
HH117_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>%
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag"))
# Select relevant columns and rows
HH117_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>%
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>%
mutate(Follicle = str_trim(Follicle),
coalesce(across(starts_with("Sequence"))))
# Select relevant columns and rows
HH117_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>%
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>%
mutate(Follicle = str_trim(Follicle),
coalesce(across(starts_with("Sequence"))))
# Select relevant columns and rows
HH117_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>%
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>%
mutate(Follicle = str_trim(Follicle),
coalesce(c_across(starts_with("Sequence"))))
# Select relevant columns and rows
HH117_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>%
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>%
mutate(Follicle = str_trim(Follicle),
Sequence = coalesce(c_across(starts_with("Sequence"))))
# Select relevant columns and rows
HH117_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>%
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>%
mutate(Follicle = str_trim(Follicle),
Sequence = coalesce(starts_with("Sequence")))
# Select relevant columns and rows
HH117_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>%
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>%
mutate(Follicle = str_trim(Follicle),
Sequence = coalesce(!!!select(., starts_with("Sequence"))))
# Select relevant columns and rows
HH117_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>%
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>%
mutate(Follicle = str_trim(Follicle),
Sequence = coalesce(!!!select(., starts_with("Sequence"))), .keep = "unused"
)
?mutate
# Select relevant columns and rows
HH117_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>%
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>%
mutate(Follicle = str_trim(Follicle),
Sequence = coalesce(!!!select(., starts_with("Sequence"))), .keep = "unused"
)
# Select relevant columns and rows
HH117_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>%
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>%
mutate(Follicle = str_trim(Follicle),
Sequence = coalesce(!!!select(., starts_with("Sequence"))), .keep = "none"
)
# Select relevant columns and rows
HH117_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>%
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>%
mutate(Follicle = str_trim(Follicle),
Sequence = coalesce(!!!select(., starts_with("Sequence"))), .keep = "unused"
)
# Select relevant columns and rows
HH117_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>%
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>%
mutate(Follicle = str_trim(Follicle),
Sequence = coalesce(!!!select(., starts_with("Sequence")))) %>%
select(Follicle, Cite.Seq..Hashing.AB, Sequence)
# Select relevant columns and rows
HH117_meta_clean <- HH117_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>%
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>%
mutate(Follicle = str_trim(Follicle),
Sequence = coalesce(!!!select(., starts_with("Sequence")))) %>%
select(Follicle, Cite.Seq..Hashing.AB, Sequence)
HH117_meta_clean$Follicle
HH117_meta_clean$Cite.Seq..Hashing.AB
HH117_meta_clean$Sequence
coalesce
?coalesce
colnames(HH117_meta_clean)
# Rename Cite.Seq..Hashing.AB
HH117_meta_clean %>% rename(Cite.Seq..Hashing.AB, id)
# Rename Cite.Seq..Hashing.AB
HH117_meta_clean %>% rename(Cite.Seq..Hashing.AB = "id")
# Rename Cite.Seq..Hashing.AB
HH117_meta_clean %>% rename("id" = Cite.Seq..Hashing.AB)
# Rename Cite.Seq..Hashing.AB
HH117_meta_clean %>% rename("id" = Cite.Seq..Hashing.AB,
"name" = Follicle)
# Clean up
HH117_meta_clean <- HH117_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>% # Select relevant columns
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>% # Select relevant rows
mutate(Follicle = str_trim(Follicle), # Remove white space
Sequence = coalesce(!!!select(., starts_with("Sequence")))) %>% # collapse hashtag sequence columns into one
select(Follicle, Cite.Seq..Hashing.AB, Sequence) %>%
rename("id" = Cite.Seq..Hashing.AB,
"name" = Follicle,
"sequence" = Sequence)
HH117_meta_clean
# Rename Cite.Seq..Hashing.AB
HH117_meta_clean$id
# Rename Cite.Seq..Hashing.AB
HH117_meta_clean$id %>% paste0("_")
# Rename Cite.Seq..Hashing.AB
HH117_meta_clean$id %>% paste("_")
# Rename Cite.Seq..Hashing.AB
HH117_meta_clean$id %>% str_replace(" ", "_")
# Rename Cite.Seq..Hashing.AB
paste("TotalSeqC") %>% str_replace(HH117_meta_clean$id , " ", "_")
# Rename Cite.Seq..Hashing.AB
paste("TotalSeqC_") %>% str_replace(HH117_meta_clean$id , " ", "_")
# Rename Cite.Seq..Hashing.AB
str_replace(HH117_meta_clean$id , " ", "_") %>%  paste("TotalSeqC_")
# Rename Cite.Seq..Hashing.AB
id_tmp <- str_replace(HH117_meta_clean$id , " ", "_")
paste(id_tmp, "TotalSeqC")
paste(id_tmp, "_TotalSeqC")
paste0(id_tmp, "_TotalSeqC")
HH117_meta_clean$id <- paste0(id_tmp, "_TotalSeqC")
HH117_meta_clean
# Rename name (demultiplexed sub sample name)
name_tmp <- str_replace(HH117_meta_clean$name , "Gina: ", "")
name_tmp
# Rename name (demultiplexed sub sample name)
HH117_meta_clean$name %>%
str_replace("Gina: ", "") %>%
str_replace_all(" ", "")
# Rename name (demultiplexed sub sample name)
HH117_meta_clean$name %>%
str_replace("Gina: ", "") %>%
str_replace_all(" ", "") %>%
str_replace_all(".", "_")
# Rename name (demultiplexed sub sample name)
HH117_meta_clean$name %>%
str_replace("Gina: ", "") %>%
str_replace_all(" ", "") %>%
str_replace_all("\.", "_")
# Rename name (demultiplexed sub sample name)
HH117_meta_clean$name %>%
str_replace("Gina: ", "") %>%
str_replace_all(" ", "") %>%
str_replace_all("\\.", "_")
# Rename name (demultiplexed sub sample name)
name_tmp <- HH117_meta_clean$name %>%
str_replace("Gina: ", "") %>%
str_replace_all(" ", "") %>%
str_replace_all("\\.", "_")
id_new <- paste0(id_tmp, "_TotalSeqC")
HH117_meta_clean$id <- id_new
# Rename name (demultiplexed sub sample name)
name_new <- HH117_meta_clean$name %>%
str_replace("Gina: ", "") %>%
str_replace_all(" ", "") %>%
str_replace_all("\\.", "_")
HH117_meta_clean$name <- name_new
HH117_meta_clean
# Order column and add more columns
HH117_meta_clean$read <- "R2"
HH117_meta_clean$pattern <- "5PNNNNNNNNNN(BC)"
HH117_meta_clean$feature_type <- "Antibody Capture"
# Order columns
# id,name,read,pattern,sequence,feature_type
HH117_meta_clean %>% select(id,name,read,pattern,sequence,feature_type)
# Order columns
# id,name,read,pattern,sequence,feature_type
HH117_meta_clean <- HH117_meta_clean %>% select(id, name, read, pattern, sequence, feature_type)
# Export as csv
# output: feature_ref.csv
write.csv(HH117_meta_clean, "01_wrangle_metadata/out/feature_ref_HH117.csv")
?write.csv
# Export as csv
# output: feature_ref.csv
write.csv(HH117_meta_clean, "01_wrangle_metadata/out/feature_ref_HH117.csv", quote = FALSE)
# Export as csv
# output: feature_ref.csv
write.csv(HH117_meta_clean, "01_wrangle_metadata/out/feature_ref_HH117.csv", quote = FALSE, row.names = FALSE)
# Load data
HH119_meta <- xlsx::read.xlsx("00_data/HH119 Calculation Hashtag Information_latestVer.xlsx",
sheetName = "Hashtag Information HH119",
startRow = 3)
# Load data
HH119_meta <- xlsx::read.xlsx("00_data/HH119Calculation Hashtag Information_latestVer.xlsx",
sheetName = "Hashtag Information HH119",
startRow = 3)
# Load data
HH119_meta <- xlsx::read.xlsx("00_data/HH119Calculation Hashtag Information_latestVersion.xlsx",
sheetName = "Hashtag Information HH119",
startRow = 3)
HH119_meta
HH119_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence"))
HH119_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>% # Select relevant columns
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag"))
HH119_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence"))
# Row index of Pool 1
pool_1_index <- min(which(HH119_meta$Follicle == "Gina: Fol.pool 2"))
pool_1_index
# Clean up
# HH119_meta_clean <-
HH119_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>% # Select relevant columns
slice_head(n = pool_1_index)
# Clean up
# HH119_meta_clean <-
HH119_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>% # Select relevant columns
slice_head(n = pool_1_index - 1)
# Clean up
# HH119_meta_clean <-
HH119_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>% # Select relevant columns
slice_head(n = pool_1_index - 1) %>% # Only include Pool 1 rows
omit.na()
# Clean up
# HH119_meta_clean <-
HH119_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>% # Select relevant columns
slice_head(n = pool_1_index - 1) %>% # Only include Pool 1 rows
na.omit()
HH119_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>% # Select relevant columns
slice_head(n = pool_1_index - 1)
# Clean up
# HH119_meta_clean <-
HH119_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>% # Select relevant columns
slice_head(n = pool_1_index - 1) %>% # Only include Pool 1 rows
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>% # Select relevant rows
mutate(Follicle = str_trim(Follicle), # Remove white space
Sequence = coalesce(!!!select(., starts_with("Sequence")))) %>% # collapse hashtag sequence columns into one
select(Follicle, Cite.Seq..Hashing.AB, Sequence) %>%
rename("id" = Cite.Seq..Hashing.AB,
"name" = Follicle,
"sequence" = Sequence)
# Clean up
HH119_meta_clean <- HH119_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>% # Select relevant columns
slice_head(n = pool_1_index - 1) %>% # Only include Pool 1 rows
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>% # Select relevant rows
mutate(Follicle = str_trim(Follicle), # Remove white space
Sequence = coalesce(!!!select(., starts_with("Sequence")))) %>% # collapse hashtag sequence columns into one
select(Follicle, Cite.Seq..Hashing.AB, Sequence) %>%
rename("id" = Cite.Seq..Hashing.AB,
"name" = Follicle,
"sequence" = Sequence)
# Rename id (hashtag IDs)
id_tmp <- str_replace(HH119_meta_clean$id , " ", "_")
id_new <- paste0(id_tmp, "_TotalSeqC")
HH119_meta_clean$id <- id_new
HH119_meta_clean
# Row index of Pool 1
pool_1_start_index <- min(which(HH119_meta$Follicle == "Gina: Fol.pool 1"))
HH119_meta
# Row index of Pool 1
pool_1_start_index <- min(which(HH119_meta$Follicle == "Gina: Fol. pool 1"))
# Row index of Pool 1
pool_1_start_index <- min(which(HH119_meta$Follicle == "Gina: Fol. Pool 1"))
?slice
# Row index (start) of Pool 2
pool_2_start_index <- min(which(HH119_meta$Follicle == "Gina: Fol.pool 2"))
rm(pool_1_index)
# Clean up
HH119_meta_clean <- HH119_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>% # Select relevant columns
slice_head(n = pool_2_start_index - 1) %>% # Only include Pool 1 rows
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>% # Select relevant rows
mutate(Follicle = str_trim(Follicle), # Remove white space
Sequence = coalesce(!!!select(., starts_with("Sequence")))) %>% # collapse hashtag sequence columns into one
select(Follicle, Cite.Seq..Hashing.AB, Sequence) %>%
rename("id" = Cite.Seq..Hashing.AB,
"name" = Follicle,
"sequence" = Sequence)
HH119_meta_clean
# Rename name (demultiplexed sub sample name)
name_new <- HH119_meta_clean$name %>%
str_replace_all(" ", "") %>%
str_replace_all("\\.", "_")
HH119_meta_clean
HH119_meta_clean
id_tmp
# Rename id (hashtag IDs)
id_tmp <- str_replace(HH119_meta_clean$id , " ", "_")
id_tmp
id_new <- paste0(id_tmp, "_TotalSeqC")
id_new
HH119_meta_clean$id <- id_new
HH119_meta_clean
name_new
HH119_meta_clean$name <- name_new
rm(HH117_meta, HH117_meta_clean)
# Clean up
HH119_pool1_meta_clean <- HH119_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>% # Select relevant columns
slice_head(n = pool_2_start_index - 1) %>% # Only include Pool 1 rows
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>% # Select relevant rows
mutate(Follicle = str_trim(Follicle), # Remove white space
Sequence = coalesce(!!!select(., starts_with("Sequence")))) %>% # collapse hashtag sequence columns into one
select(Follicle, Cite.Seq..Hashing.AB, Sequence) %>%
rename("id" = Cite.Seq..Hashing.AB,
"name" = Follicle,
"sequence" = Sequence)
rm(HH119_pool1_meta_clean)
# Clean up
HH119_pool1_meta_clean <- HH119_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>% # Select relevant columns
slice_head(n = pool_2_start_index - 1) %>% # Only include Pool 1 rows
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>% # Select relevant rows
mutate(Follicle = str_trim(Follicle), # Remove white space
Sequence = coalesce(!!!select(., starts_with("Sequence")))) %>% # collapse hashtag sequence columns into one
select(Follicle, Cite.Seq..Hashing.AB, Sequence) %>%
rename("id" = Cite.Seq..Hashing.AB,
"name" = Follicle,
"sequence" = Sequence)
# Rename id (hashtag IDs)
id_tmp <- str_replace(HH119_pool_1_meta_clean$id , " ", "_")
id_new <- paste0(id_tmp, "_TotalSeqC")
HH119_pool_1_meta_clean$id <- id_new
# Rename name (demultiplexed sub sample name)
name_new <- HH119_pool1_meta_clean$name %>%
str_replace_all(" ", "") %>%
str_replace_all("\\.", "_")
# Clean up
HH119_pool_1_meta_clean <- HH119_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>% # Select relevant columns
slice_head(n = pool_2_start_index - 1) %>% # Only include Pool 1 rows
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>% # Select relevant rows
mutate(Follicle = str_trim(Follicle), # Remove white space
Sequence = coalesce(!!!select(., starts_with("Sequence")))) %>% # collapse hashtag sequence columns into one
select(Follicle, Cite.Seq..Hashing.AB, Sequence) %>%
rename("id" = Cite.Seq..Hashing.AB,
"name" = Follicle,
"sequence" = Sequence)
# Rename id (hashtag IDs)
id_tmp <- str_replace(HH119_pool_1_meta_clean$id , " ", "_")
id_new <- paste0(id_tmp, "_TotalSeqC")
HH119_pool_1_meta_clean$id <- id_new
# Rename name (demultiplexed sub sample name)
name_new <- HH119_pool1_meta_clean$name %>%
str_replace_all(" ", "") %>%
str_replace_all("\\.", "_")
# Load data
HH119_meta <- xlsx::read.xlsx("00_data/HH119Calculation Hashtag Information_latestVersion.xlsx",
sheetName = "Hashtag Information HH119",
startRow = 3)
# Row index (start) of Pool 2
pool_2_start_index <- min(which(HH119_meta$Follicle == "Gina: Fol.pool 2"))
# Clean up
HH119_pool_1_meta_clean <- HH119_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>% # Select relevant columns
slice_head(n = pool_2_start_index - 1) %>% # Only include Pool 1 rows
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>% # Select relevant rows
mutate(Follicle = str_trim(Follicle), # Remove white space
Sequence = coalesce(!!!select(., starts_with("Sequence")))) %>% # collapse hashtag sequence columns into one
select(Follicle, Cite.Seq..Hashing.AB, Sequence) %>%
rename("id" = Cite.Seq..Hashing.AB,
"name" = Follicle,
"sequence" = Sequence)
# Rename id (hashtag IDs)
id_tmp <- str_replace(HH119_pool_1_meta_clean$id , " ", "_")
id_new <- paste0(id_tmp, "_TotalSeqC")
HH119_pool_1_meta_clean$id <- id_new
# Rename name (demultiplexed sub sample name)
name_new <- HH119_pool_1_meta_clean$name %>%
str_replace_all(" ", "") %>%
str_replace_all("\\.", "_")
HH119_pool_1_meta_clean$name <- name_new
# Add new columns
HH119_pool_1_meta_clean$read <- "R2"
HH119_pool_1_meta_clean$pattern <- "5PNNNNNNNNNN(BC)"
HH119_pool_1_meta_clean$feature_type <- "Antibody Capture"
# Order columns
# output header: id,name,read,pattern,sequence,feature_type
HH119_pool_1_meta_clean <- HH119_pool1_meta_clean %>% select(id, name, read, pattern, sequence, feature_type)
# Order columns
# output header: id,name,read,pattern,sequence,feature_type
HH119_pool_1_meta_clean <- HH119_pool_1_meta_clean %>% select(id, name, read, pattern, sequence, feature_type)
HH119_pool_1_meta_clean
# Export as csv
# output: feature_ref.csv
write.csv(HH119_pool_1_meta_clean, "01_wrangle_metadata/out/feature_ref_HH119_pool_1.csv", quote = FALSE, row.names = FALSE)
rm(HH119_pool_1_meta_clean)
HH119_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>% # Select relevant columns
slice_tail(n = pool_2_start_index)
HH119_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>% # Select relevant columns
slice_tail(n = pool_2_start_index + 1)
HH119_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>% # Select relevant columns
slice_tail(n = pool_2_start_index - 1)
HH119_meta
HH119_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence"))
pool_2_start_index
HH119_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>% # Select relevant columns
slice_tail(n = pool_2_start_index )
HH119_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>% # Select relevant columns
slice(pool_2_start_index:n())
# Clean up
HH119_pool_2_meta_clean <- HH119_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>% # Select relevant columns
slice(pool_2_start_index:n()) %>% # Only include Pool 1 rows
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>% # Select relevant rows
mutate(Follicle = str_trim(Follicle), # Remove white space
Sequence = coalesce(!!!select(., starts_with("Sequence")))) %>% # collapse hashtag sequence columns into one
select(Follicle, Cite.Seq..Hashing.AB, Sequence) %>%
rename("id" = Cite.Seq..Hashing.AB,
"name" = Follicle,
"sequence" = Sequence)
HH119_pool_2_meta_clean
# Rename id (hashtag IDs)
id_tmp <- str_replace(HH119_pool_1_meta_clean$id , " ", "_")
id_new <- paste0(id_tmp, "_TotalSeqC")
# Rename id (hashtag IDs)
id_tmp <- str_replace(HH119_pool_2_meta_clean$id , " ", "_")
id_new <- paste0(id_tmp, "_TotalSeqC")
HH119_pool_2_meta_clean$id <- id_new
# Rename name (demultiplexed sub sample name)
name_new <- HH119_pool_2_meta_clean$name %>%
str_replace_all(" ", "") %>%
str_replace_all("\\.", "_")
# Add new columns
HH119_pool_2_meta_clean$read <- "R2"
HH119_pool_2_meta_clean$pattern <- "5PNNNNNNNNNN(BC)"
HH119_pool_2_meta_clean$feature_type <- "Antibody Capture"
# Order columns
# output header: id,name,read,pattern,sequence,feature_type
HH119_pool_2_meta_clean <- HH119_pool_2_meta_clean %>% select(id, name, read, pattern, sequence, feature_type)
# Export as csv
# output: feature_ref.csv
write.csv(HH119_pool_2_meta_clean, "01_wrangle_metadata/out/feature_ref_HH119_pool_2.csv", quote = FALSE, row.names = FALSE)
rm(HH119_pool_2_meta_clean)
# Rename id (hashtag IDs)
id_tmp <- str_replace(HH119_pool_2_meta_clean$id , " ", "_")
id_new <- paste0(id_tmp, "_TotalSeqC")
HH119_pool_2_meta_clean$id <- id_new
# Rename name (demultiplexed sub sample name)
name_new <- HH119_pool_2_meta_clean$name %>%
str_replace_all(" ", "") %>%
str_replace_all("\\.", "_")
# Clean up
HH119_pool_2_meta_clean <- HH119_meta %>%
select(Follicle, Cite.Seq..Hashing.AB, starts_with("Sequence")) %>% # Select relevant columns
slice(pool_2_start_index:n()) %>% # Only include Pool 2 rows
filter(str_starts(Cite.Seq..Hashing.AB, "Hashtag")) %>% # Select relevant rows
mutate(Follicle = str_trim(Follicle), # Remove white space
Sequence = coalesce(!!!select(., starts_with("Sequence")))) %>% # collapse hashtag sequence columns into one
select(Follicle, Cite.Seq..Hashing.AB, Sequence) %>%
rename("id" = Cite.Seq..Hashing.AB,
"name" = Follicle,
"sequence" = Sequence)
# Rename id (hashtag IDs)
id_tmp <- str_replace(HH119_pool_2_meta_clean$id , " ", "_")
id_new <- paste0(id_tmp, "_TotalSeqC")
HH119_pool_2_meta_clean$id <- id_new
# Rename name (demultiplexed sub sample name)
name_new <- HH119_pool_2_meta_clean$name %>%
str_replace_all(" ", "") %>%
str_replace_all("\\.", "_")
HH119_pool_2_meta_clean$name <- name_new
# Add new columns
HH119_pool_2_meta_clean$read <- "R2"
HH119_pool_2_meta_clean$pattern <- "5PNNNNNNNNNN(BC)"
HH119_pool_2_meta_clean$feature_type <- "Antibody Capture"
# Order columns
# output header: id,name,read,pattern,sequence,feature_type
HH119_pool_2_meta_clean <- HH119_pool_2_meta_clean %>% select(id, name, read, pattern, sequence, feature_type)
HH119_pool_2_meta_clean
# Export as csv
# output: feature_ref.csv
write.csv(HH119_pool_2_meta_clean, "01_wrangle_metadata/out/feature_ref_HH119_pool_2.csv", quote = FALSE, row.names = FALSE)
rm(HH119_pool_2_meta_clean)
length("HH117-SI-PP-nonINF-HLADR-AND-CD19-AND-GC-AND-TFH")
nchar("HH117-SI-PP-nonINF-HLADR-AND-CD19-AND-GC-AND-TFH")
nchar("HH117-SI-PP-nonINF-HLADR-AND-CD19-AND-GC-AND-TFH_Multi_Analysis")
nchar("TCR-HH117-SI-PP-nonINF-HLADR-AND-CD19-AND-GC-AND-TFH")
nchar("ADT-HH117-SI-PP-nonINF-HLADR-AND-CD19-AND-GC-AND-TFH")
setwd("~/Documents/projects/project_Bcells/Gina_project/")
library(Seurat)
library(tidyverse)
library(glue)
seurat_obj_list <- readRDS("~/Documents/projects/project_Bcells/Gina_project/06_load_seurat/out/seurat_obj_list.rds")
